function fn_save = transform_identity(fn_ref,fn_hom,nn_flag)
% Uses elastix to interpolate a homologous image to the geometry of a reference image
% For use with correctly defined image geometry within an acquisition series,
%       without movement between scans

[odir,homname,ext] = fileparts(fn_hom);

info_r = niftiinfo(fn_ref);

T = diag([-1 -1 1 1])*info_r.Transform.T'/diag([info_r.PixelDimensions,1]);
orient = reshape(T(1:3,1:3),1,[]);
orig = T(1:3,4);

if ~strcmp(ext,'.gz')
    homname = [homname,ext];
end
basename = extractBefore(homname,'.');
fn_save = fullfile(odir,insertAfter(homname,basename,'.reg'));

if nn_flag
    resampstr = 'FinalNearestNeighborInterpolator';
else
    resampstr = 'FinalBSplineInterpolator';
end

% Write TransformParameters.txt file
fn = fullfile(odir,'iTransformParameters.txt');
fid = fopen(fn,'w');
fprintf(fid,[...
        '(NumberOfParameters  12)\n',...
        '(TransformParameters  1  0  0  0  1  0  0  0  1  0  0  0)\n',...
        '(Transform "AffineTransform")\n',...
        '(InitialTransformParametersFileName "NoInitialTransform")\n',...
        '(HowToCombineTransforms "Compose")\n',...
        '(FixedImageDimension  3)\n',...
        '(MovingImageDimension  3)\n',...
        '(Size',sprintf('  %d',info_r.ImageSize),')\n',...
        '(Index  0  0  0)\n',...
        '(Spacing',sprintf('  %.4f',info_r.PixelDimensions),')\n',...
        '(Origin',sprintf(' %.8f',orig),')\n',...
        '(CenterOfRotationPoint  0  0  0)\n',...
        '(Direction',sprintf(' %.8f',orient),')\n',...
        '(UseDirectionCosines "true")\n',...
        '(ResampleInterpolator "',resampstr,'")\n',...
        '(FinalBSplineInterpolationOrder  3)\n',...
        '(Resampler "DefaultResampler")\n',...
        '(DefaultPixelValue  0)\n',...
        '(ResultImageFormat "nii")\n',...
        '(ResultImagePixelType "float")\n',...
        '(FixedInternalImagePixelType "float")\n',...
        '(MovingInternalImagePixelType "float")\n',...
        '(CompressResultImage "false")\n'...
    ]);
fclose(fid);

% System call to Transformix
str = ['transformix -out "',odir,'" -tp "',fn,'" -in "',fn_hom,'"'];
system(str);

% Rename result file
movefile(fullfile(odir,'result.nii'),fn_save);
gzip(fn_save);
delete(fn_save);
fn_save = [fn_save,'.gz'];
